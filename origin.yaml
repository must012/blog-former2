AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: "CFn Template for Former2 Test"
Resources:
    EC2Instance:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-0f9816f78187c68fb"
            InstanceType: "t2.micro"
            KeyName: "publicTestKey"
            AvailabilityZone: !GetAtt EC2Subnet2.AvailabilityZone
            Tenancy: "default"
            SubnetId: !Ref EC2Subnet2
            EbsOptimized: false
            SecurityGroupIds: 
              - !Ref EC2SecurityGroup2
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/xvda"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    VolumeType: "gp3"
                    DeleteOnTermination: true
            Tags: 
              - 
                Key: "prj"
                Value: "former"
              - 
                Key: "Name"
                Value: "test1"
            HibernationOptions: 
                Configured: false
            EnclaveOptions: 
                Enabled: false

    EC2Instance2:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-0f9816f78187c68fb"
            InstanceType: "t2.micro"
            KeyName: "publicTestKey"
            AvailabilityZone: !GetAtt EC2Subnet.AvailabilityZone
            Tenancy: "default"
            SubnetId: !Ref EC2Subnet
            EbsOptimized: false
            SecurityGroupIds: 
              - !Ref EC2SecurityGroup2
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/xvda"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    VolumeType: "gp3"
                    DeleteOnTermination: true
            Tags: 
              - 
                Key: "Name"
                Value: "test2"
              - 
                Key: "prj"
                Value: "former"
            HibernationOptions: 
                Configured: false
            EnclaveOptions: 
                Enabled: false

    EC2SecurityGroup:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "former-rds"
            GroupName: "former-rds"
            Tags: 
              - 
                Key: "prj"
                Value: "former"
            VpcId: !Ref EC2VPC
            SecurityGroupIngress: 
              - 
                CidrIp: !GetAtt EC2VPC.CidrBlock
                FromPort: !GetAtt RDSDBInstance.Endpoint.Port
                IpProtocol: "tcp"
                ToPort: !GetAtt RDSDBInstance.Endpoint.Port
            SecurityGroupEgress: 
              - 
                CidrIp: "0.0.0.0/0"
                IpProtocol: "-1"

    EC2SecurityGroup2:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "formertest-ec2"
            GroupName: "formertest-ec2"
            Tags: 
              - 
                Key: "prj"
                Value: "former"
            VpcId: !Ref EC2VPC
            SecurityGroupIngress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
            SecurityGroupEgress: 
              - 
                CidrIp: "0.0.0.0/0"
                IpProtocol: "-1"

    RDSDBInstance:
        Type: "AWS::RDS::DBInstance"
        Properties:
            DBInstanceIdentifier: "former-db"
            AllocatedStorage: 200
            DBInstanceClass: "db.t3.micro"
            Engine: "mariadb"
            MasterUsername: "admin"
            MasterUserPassword: "adminadmin"
            PreferredBackupWindow: "16:35-17:05"
            BackupRetentionPeriod: 0
            AvailabilityZone: !GetAtt EC2Instance2.AvailabilityZone
            PreferredMaintenanceWindow: "sat:18:43-sat:19:13"
            MultiAZ: false
            EngineVersion: "10.6.10"
            AutoMinorVersionUpgrade: false
            LicenseModel: "general-public-license"
            PubliclyAccessible: true
            StorageType: "gp2"
            Port: 3306
            StorageEncrypted: false
            CopyTagsToSnapshot: true
            MonitoringInterval: 0
            EnableIAMDatabaseAuthentication: false
            EnablePerformanceInsights: false
            DeletionProtection: false
            DBSubnetGroupName: !Sub "default-${EC2VPC}"
            VPCSecurityGroups: 
              - !Ref EC2SecurityGroup2
            DBParameterGroupName: "default.mariadb10.6"
            OptionGroupName: "default:mariadb-10-6"
            CACertificateIdentifier: "rds-ca-2019"
            Tags: 
              - 
                Key: "prj"
                Value: "former"

    RDSDBSubnetGroup:
        Type: "AWS::RDS::DBSubnetGroup"
        Properties:
            DBSubnetGroupDescription: "Created from the RDS Management Console"
            DBSubnetGroupName: !Sub "default-${EC2VPC}"
            SubnetIds: 
              - !Ref EC2Subnet
              - !Ref EC2Subnet2

    EC2VPC:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock: "10.0.0.0/16"
            EnableDnsSupport: true
            EnableDnsHostnames: true
            InstanceTenancy: "default"
            Tags: 
              - 
                Key: "Name"
                Value: "former-vpc"
              - 
                Key: "prj"
                Value: "former"

    EC2Subnet:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}c"
            CidrBlock: "10.0.16.0/20"
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "prj"
                Value: "former"
              - 
                Key: "Name"
                Value: !Sub "former-subnet-public2-${AWS::Region}c"

    EC2Subnet2:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}a"
            CidrBlock: "10.0.0.0/20"
            VpcId: !Ref EC2VPC
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "prj"
                Value: "former"
              - 
                Key: "Name"
                Value: !Sub "former-subnet-public1-${AWS::Region}a"

    EC2InternetGateway:
        Type: "AWS::EC2::InternetGateway"
        Properties:
            Tags: 
              - 
                Key: "prj"
                Value: "former"
              - 
                Key: "Name"
                Value: "former-igw"

    EC2EIP:
        Type: "AWS::EC2::EIP"
        Properties:
            Domain: "vpc"
            InstanceId: !Ref EC2Instance2

    EC2RouteTable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC
            Tags: 
              - 
                Key: "Name"
                Value: "former-rtb-public"
              - 
                Key: "prj"
                Value: "former"

    EC2RouteTable2:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref EC2VPC

    EC2Route:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "0.0.0.0/0"
            GatewayId: !Ref EC2InternetGateway
            RouteTableId: !Ref EC2RouteTable

    EC2SubnetRouteTableAssociation:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref EC2RouteTable
            SubnetId: !Ref EC2Subnet2

    EC2SubnetRouteTableAssociation2:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref EC2RouteTable
            SubnetId: !Ref EC2Subnet

    EC2VPCGatewayAttachment:
        Type: "AWS::EC2::VPCGatewayAttachment"
        Properties:
            InternetGatewayId: !Ref EC2InternetGateway
            VpcId: !Ref EC2VPC